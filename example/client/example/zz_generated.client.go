/*
Package example GENERATED BY gengo:client 
DON'T EDIT THIS FILE
*/
package example

import (
	io "io"

	org "github.com/octohelm/courier/example/apis/org"
	domainorg "github.com/octohelm/courier/example/pkg/domain/org"
	filter "github.com/octohelm/courier/example/pkg/filter"
	courier "github.com/octohelm/courier/pkg/courier"
	courierhttp "github.com/octohelm/courier/pkg/courierhttp"
)

type Cookie struct {
	courierhttp.MethodPost `path:"/api/example/v0/cookie-ping-pong"`

	Token string `name:"token,omitempty" in:"cookie"`
}

func (r *Cookie) ResponseData() *CookieResponse {
	return new(CookieResponse)
}

type DeleteOrg struct {
	courierhttp.MethodDelete `path:"/api/example/v0/orgs/:orgName"`

	OrgName string `name:"orgName" in:"path"`
}

func (r *DeleteOrg) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type GetOrg struct {
	courierhttp.MethodGet `path:"/api/example/v0/orgs/:orgName"`

	OrgName string `name:"orgName" in:"path"`
}

func (r *GetOrg) ResponseData() *GetOrgResponse {
	return new(GetOrgResponse)
}

type GetFile struct {
	courierhttp.MethodPost `path:"/api/example/v0/blobs/:path"`

	Path string `name:"path" in:"path"`
}

func (r *GetFile) ResponseData() *GetFileResponse {
	return new(GetFileResponse)
}

type ListOrgOld struct {
	courierhttp.MethodGet `path:"/api/example/v0/org"`
}

func (r *ListOrgOld) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type GetStoreBlob struct {
	courierhttp.MethodGet `path:"/api/example/v0/store/:scope/blobs/:digest"`

	Scope string `name:"scope" in:"path"`

	Digest string `name:"digest" in:"path"`
}

func (r *GetStoreBlob) ResponseData() *GetStoreBlobResponse {
	return new(GetStoreBlobResponse)
}

type UploadStoreBlob struct {
	courierhttp.MethodPost `path:"/api/example/v0/store/:scope/blobs/uploads"`

	Scope string `name:"scope" in:"path"`

	IoReadCloser `in:"body" mime:"application/octet-stream"`
}

func (r *UploadStoreBlob) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type UploadBlob struct {
	courierhttp.MethodPost `path:"/api/example/v0/blobs"`

	IoReadCloser `in:"body" mime:"application/octet-stream"`
}

func (r *UploadBlob) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type ListOrg struct {
	courierhttp.MethodGet `path:"/api/example/v0/orgs"`

	OrgId *OrgIdAsFilter `name:"org~id,omitempty" in:"query"`
}

func (r *ListOrg) ResponseData() *ListOrgResponse {
	return new(ListOrgResponse)
}

type CreateOrg struct {
	courierhttp.MethodPost `path:"/api/example/v0/orgs"`

	OrgInfo `in:"body" mime:"application/json"`
}

func (r *CreateOrg) ResponseData() *courier.NoContent {
	return new(courier.NoContent)
}

type ListOrgResponse = org.DataList[org.Info]
type CookieResponse = any

type GetOrgResponse = org.Detail
type GetFileResponse = string

type OrgInfoAsDataList = org.DataList[org.Info]
type OrgInfo = org.Info
type OrgIdAsFilter = filter.Filter[org.ID]
type OrgDetail = org.Detail
type OrgType = domainorg.Type
type Time string

type GetStoreBlobResponse = string

type IoReadCloser = io.ReadCloser
